{"version":3,"sources":["utils/index.js","App.js","reportWebVitals.js","index.js"],"names":["WELCOME_TEXTS","colors","SHOW_HELP","HELP_LIST","command","description","url","WITH_PROMPT","styles","main","backgroundColor","display","alignItems","justifyContent","minHeight","DevDayPage","useState","enabled","input","setInput","xtermRef","useRef","writeTerminal","useCallback","text","current","terminal","write","clearTerminal","clear","asyncTyped","a","time","Promise","resolve","setTimeout","useEffect","renderKmongDevday","arr","loadAddon","WebLinksAddon","loadAddons","focus","welcomeTyped","pressEnterKey","setDay","Date","now","distance","getTime","day","Math","floor","writeSchedule","window","location","replace","writeMincho","person","split","writeCd","writeStart","writeReadme","forEach","help","writeNotFoundCommand","find","handleChangeCLI","data","code","charCodeAt","slice","typing","style","ref","options","cursorBlink","onData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.3aad547a.chunk.js","sourcesContent":["/* eslint-disable no-useless-escape */\nexport const WELCOME_TEXTS = {\n    KMONG: [\n        \" __  ___ .___  ___.   ______   .__   __.   _______                          \\r\\n\",\n        \"|  |/  / |   \\/   |  /  __  \\  |  \\ |  |  /  _____|                         \\r\\n\",\n        \"|  '  /  |  \\  /  | |  |  |  | |   \\|  | |  |  __                           \\r\\n\",\n        \"|    <   |  |\\/|  | |  |  |  | |  . \\`  | |  | |_ |                          \\r\\n\",\n        \"|  .  \\  |  |  |  | |  \\`--'  | |  |\\   | |  |__| |                          \\r\\n\",\n        \"|__|\\__\\ |__|  |__|  \\______/  |__| \\__|  \\______|                          \\r\\n\"\n    ],\n    DEVDAY: [\n        \"       _______   ___________    ____       _______       ___   ____    ____ \\r\\n\",\n        \"      |       \\ |   ____\\   \\  /   /      |       \\     /   \\  \\   \\  /   / \\r\\n\",\n        \"      |  .--.  ||  |__   \\   \\/   / ______|  .--.  |   /  ^  \\  \\   \\/   /  \\r\\n\",\n        \"      |  |  |  ||   __|   \\      / |______|  |  |  |  /  /_\\  \\  \\_    _/   \\r\\n\",\n        \"      |  '--'  ||  |____   \\    /         |  '--'  | /  _____  \\   |  |     \\r\\n\",\n        \"      |_______/ |_______|   \\__/          |_______/ /__/     \\__\\  |__|     \\r\\n\",\n        \"                                                                            \\r\\n\",\n    ],\n};\n\nexport const RESET_COLOR = '\\u001b[0m';\nexport const colors = {\n    red: '\\x1b[1;31m',\n    white: '\\x1b[37m',\n};\nexport const NOT_FOUND = (command) => `\\n\\r${colors.red}Usage Error ${RESET_COLOR} Command \"${command}\" not found.\\r\\n\\r\\nUsage: devday <command>\\r\\n\\r\\nwhere <command> is one of:\\n\\r    start, readme`;\nexport const SHOW_HELP = 'devday --help     display full usage info';\n\nexport const HELP_LIST = [{\n    command: 'devday start',\n    description: ' ---- join devday',\n    url: 'https://gather.town/app/AncfUoSib6cE7E1i/kmong',\n}, {\n    command: 'devday readme',\n    description: '---- visit notion',\n    url: 'https://kmong.com'\n}];\n\nexport const WITH_PROMPT = '\\r\\n$ ';\n","/* eslint-disable no-restricted-globals */\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { XTerm } from 'xterm-for-react'\nimport { WebLinksAddon } from 'xterm-addon-web-links';\nimport { colors, HELP_LIST, NOT_FOUND, SHOW_HELP, WELCOME_TEXTS, WITH_PROMPT } from './utils';\n\nfunction DevDayPage() {\n  const [enabled, setEnabled] = useState(true);\n  const [input, setInput] = useState('');\n  const xtermRef = useRef(null);\n  const writeTerminal = useCallback((text) => xtermRef.current?.terminal.write(text), []);\n  const clearTerminal = useCallback(() => xtermRef.current?.terminal.clear());\n\n  const asyncTyped = useCallback(async (text, time = 200) => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        writeTerminal(text);\n        resolve(null);\n      }, time);\n    });\n  }, [writeTerminal]);\n\n  useEffect(() => {\n    loadAddons();\n    focus();\n    welcomeTyped();\n\n    function loadAddons() {\n      xtermRef.current?.terminal.loadAddon(new WebLinksAddon());\n    }\n\n    async function renderKmongDevday(arr) {\n      for (const text of arr) {\n        await asyncTyped(text, 120);\n      }\n    }\n\n    function focus() {\n      xtermRef.current?.terminal.focus()\n    }\n    \n    async function welcomeTyped() {\n      await renderKmongDevday(WELCOME_TEXTS.KMONG);\n      await asyncTyped('', 750);\n      await renderKmongDevday(WELCOME_TEXTS.DEVDAY);\n      await asyncTyped('', 500);\n      await asyncTyped('1');\n      await asyncTyped('회');\n      await asyncTyped(' 크');\n      await asyncTyped('몽');\n      await asyncTyped(' 데', 150);\n      await asyncTyped('브', 150);\n      await asyncTyped('데', 150);\n      asyncTyped('이\\r\\n');\n      asyncTyped('press any key to start');\n    }\n  }, [asyncTyped, writeTerminal])\n\n  const pressEnterKey = useCallback(() => {\n    switch (input) {\n      case '': {\n\n\n        // D-day 계산\n        const setDay = new Date(\"2021-12-16:23:59:59+0900\");\n        const now = new Date();\n        const distance = setDay.getTime() - now.getTime();\n        let day = Math.floor(distance/(1000*60*60*24));\n\n        if (day == 0) {\n          day = 'DAY';\n        }\n\n        clearTerminal();\n       \n        writeSchedule(day);\n\n        break;\n      }\n      case 'ls': {\n        writeLs();\n        break;\n      }\n      case 'cd':\n      case 'cd ':\n      case 'cd ..':\n      case 'cd ~' : {\n        window.location.replace(\"/\")\n        break;\n      }\n      case 'cd bk':\n      case 'cd edgar':\n      case 'cd daniel':\n      case 'cd mincho': {\n\n        clearTerminal();\n        writeMincho();\n\n        break;\n      }\n      case 'cd vigli': {\n        const person = input.split(' ')[1] ?? '';\n        if (person === '' || person === '..') {\n          writeNoSuchCd();\n        } else {\n          writeCd();\n        }\n        break;\n      }\n      case 'cd nadia':\n      case 'show me the money': {\n        writeTerminal('\\r\\n');\n        writeTerminal('10,000');\n        writeTerminal('\\r\\n');\n        break;\n      }\n      case 'rm -rf':\n      case 'rm -rf /': {\n        writeTerminal('\\r\\n');\n        writeTerminal('please');\n        writeTerminal('\\r\\n');\n        break;\n      }\n      case 'devday start': {\n        writeStart();\n        break;\n      }\n      case 'devday readme': {\n        writeReadme();\n        break;\n      }\n      case 'devday --help': {\n        writeHelp();\n        break;\n      }\n      default: {\n        writeNotFoundCommand();\n        break;\n      }\n    }\n    writeTerminal(WITH_PROMPT);\n    writeTerminal(\"\");\n    setInput('');\n\n    function writeNotFoundCommand() {\n      writeTerminal('\\r\\n');\n      writeTerminal(NOT_FOUND(input));\n      writeTerminal('\\r\\n');\n      writeTerminal(SHOW_HELP);\n      writeTerminal('\\r\\n');\n    }\n\n    function writeHelp() {\n      writeTerminal('\\r\\n');\n      HELP_LIST.forEach((help) => {\n        writeTerminal(WITH_PROMPT);\n        writeTerminal(`${help.command}    ${help.description}`);\n      });\n      writeTerminal('\\r\\n');\n    }\n\n    function writeLs() {\n      writeTerminal('\\r\\n');\n      writeTerminal('bk                edgar               daniel');\n      writeTerminal('\\r\\n');\n      writeTerminal('mincho            vigli               nadia');\n      writeTerminal('\\r\\n');\n    }\n\n    function writeCd() {\n      const person = input.split(' ')[1] ?? '';\n      writeTerminal('\\r\\n');\n      writeTerminal(`${colors.red}WARNING${colors.white} Access denied for user to database '${person}'.`);\n      writeTerminal('\\r\\n');\n    }\n\n    function writeNoSuchCd() {\n      writeTerminal('\\r\\n');\n      writeTerminal(`${colors.red}WARNING${colors.white} bash: cd: desktop: No such file or directory`);\n      writeTerminal('\\r\\n');\n    }\n\n    async function writeReadme() {\n      writeTerminal(WITH_PROMPT);\n      const url = HELP_LIST.find((help) => help.command === 'devday readme').url;\n      writeTerminal(`visit to ${url}`);\n\n      await asyncTyped('\\r\\n', 150);\n      writeTerminal('\\r\\n');\n      asyncTyped('press devday --help to show menu\\n\\r');\n    }\n\n    async function writeStart() {\n      writeTerminal(WITH_PROMPT);\n      const url = HELP_LIST.find((help) => help.command === 'devday start').url;\n      writeTerminal(`visit to ${url}`);\n      writeTerminal('\\r\\n');\n      await asyncTyped('password : kmong', 300);\n\n      // 움직일 수가 없다 ... \n      // setEnabled(false);\n      writeTerminal('\\r\\n');\n      await asyncTyped('.', 300);\n      writeTerminal('\\r\\n');\n      await asyncTyped('..', 400);\n      writeTerminal('\\r\\n');\n      await asyncTyped('...', 500);\n      writeTerminal('\\r\\n');\n      await asyncTyped('....', 700);\n      writeTerminal('\\r\\n');\n      await asyncTyped('.....', 900);\n      writeTerminal('\\r\\n');\n      writeTerminal(\"[프로세스 완료됨]\");\n\n      await asyncTyped('\\r\\n', 150);\n      writeTerminal('\\r\\n');\n      asyncTyped('press devday --help to show menu\\n\\r');\n\n    }\n  }, [asyncTyped, input, writeTerminal]);\n\n  async function writeSchedule(day) {\n    await asyncTyped('', 500);\n    writeTerminal('\\r\\n');\n    writeTerminal('\\r\\n');\n\n    writeTerminal('\\r\\t*************\t Kmong DevDay\t *************\\n');\n    await asyncTyped('', 750);\n    writeTerminal(`\\r\\t\\t      일정표 D-${day} (12/16)\\n`);\n    await asyncTyped('', 250);\n\n    writeTerminal('\\r\\n');\n    writeTerminal('\\r\\n');\n\n    await asyncTyped('', 550);\n    writeTerminal('\\r\\t1부\\n');\n    writeTerminal('\\r\\t\\t14:00 - 14:30   ooo  [주제 주제 주제]\\n');\n    writeTerminal('\\r\\t\\t14:40 - 15:10   ooo  [주제 주제 주제]\\n');\n    writeTerminal('\\r\\t\\t15:20 - 15:50   ooo  [주제 주제 주제]\\n');\n    \n\n    writeTerminal('\\r\\n');\n    writeTerminal('\\r\\n');\n\n    await asyncTyped('', 550);\n    writeTerminal('\\r\\t쉬는 시간\\n');\n    writeTerminal('\\r\\t\\t15:50 - 16:10    쉬고 오셔용 (｡•̀ᴗ-)✧ (찡긋-☆)\\n');\n\n    writeTerminal('\\r\\n');\n    writeTerminal('\\r\\n');\n\n    await asyncTyped('', 550);\n    writeTerminal('\\r\\t2부\\n');\n    writeTerminal('\\r\\t\\t16:10 - 16:40    ooo [주제 주제 주제]\\n');\n    writeTerminal('\\r\\t\\t16:50 - 17:20    ooo [주제 주제 주제]\\n');\n    writeTerminal('\\r\\t\\t17:30 - 18:00    ooo [주제 주제 주제]\\n');\n\n    writeTerminal('\\r\\n');\n    asyncTyped('press devday --help to show menu\\n\\r');\n    writeTerminal('\\r\\n');\n  }\n\n  // 이런식으로 소감 넣어도 좋을것 같아용\n  async function writeMincho(){\n\n      await asyncTyped('', 500);\n      await asyncTyped('안');\n      await asyncTyped('녕');\n      await asyncTyped('하');\n      await asyncTyped('세');\n      await asyncTyped('요', 150);\n      await asyncTyped('.', 150);\n      await asyncTyped('.', 150);\n      await asyncTyped('\\r\\n', 150);\n      await asyncTyped('이 글을 보고 있다면 ... ', 150);\n\n      await asyncTyped('\\r\\n', 150);\n      await asyncTyped('우린 회의를 ... ', 550);\n      await asyncTyped('\\r\\n', 150);\n      await asyncTyped('하고 있겠죠.. ??', 550);\n      await asyncTyped('\\r\\n', 150);\n      await asyncTyped('그럼 전 이만', 550);\n      await asyncTyped('\\r\\n', 150);\n      await asyncTyped('뿅 !! (〜￣▽￣)〜', 550);\n      await asyncTyped('\\r\\n', 150);\n      writeTerminal('\\r\\n');\n      asyncTyped('press devday --help to show menu\\n\\r');\n\n  }\n\n  const handleChangeCLI = useCallback((data) => {\n    if (!enabled) {\n      return;\n    }\n\n    if (!xtermRef.current) {\n      return;\n    }\n\n    const code = data.charCodeAt(0);\n    if (code === 13) {\n      // 엔터\n      pressEnterKey();\n    } else if (code < 32) {\n      // 이상한거 (컨투롤, 알트 커맨드 등등)\n      return;\n    } else if (code === 127) {\n      // 빽스페이스\n      pressBackspace();\n    } else {\n      // 타이핑\n      typing(data);\n    }\n\n    function pressBackspace() {\n      writeTerminal(\"\\b \\b\");\n      setInput(input.slice(0, -1));\n    }\n\n    function typing(data) {\n      writeTerminal(data);\n      setInput(input + data);\n    }\n  }, [enabled, input, pressEnterKey, writeTerminal]);\n\n  return (\n    <main style={styles.main}>\n      <XTerm\n        ref={xtermRef}\n        options={{ cursorBlink: enabled }}\n        onData={handleChangeCLI}\n      />\n    </main>\n  );\n}\n\nconst styles = {\n  main: {\n    backgroundColor: '#000',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    minHeight: '100vh',\n  }\n};\n\nexport default DevDayPage;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}